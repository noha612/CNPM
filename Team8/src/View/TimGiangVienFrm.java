/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Control.LichGiangDayDAO;
import Control.GiangVienDAO;
import Control.MonHocDAO;
import Model.GiangVien;
import Model.KipHoc;
import Model.LopHocPhan;
import Model.MonHoc;
import Model.PhongHoc;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author LeHoa
 */
public class TimGiangVienFrm extends javax.swing.JFrame implements ActionListener{

    private ArrayList<GiangVien> listGV;
    private ArrayList<JButton> listselect; 
    private TimPhongFrm parent; 
    private MonHoc MH;
    private LopHocPhan LHP;
    private PhongHoc PH;
    private KipHoc KH;
    
    public TimGiangVienFrm(TimPhongFrm parent, MonHoc MH, LopHocPhan LHP, PhongHoc PH, KipHoc KH) {
        this.MH =MH;
        this.LHP = LHP;
        this.PH =PH;
        this.parent = parent;
        this.KH = KH;
        listGV = new ArrayList<GiangVien>();
        listselect = new ArrayList<JButton>();
        initComponents();
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        mamon.setText(mamon.getText()+MH.getMaMon());
        tenmon.setText(tenmon.getText()+MH.getTenMon());
        lophocphan.setText(lophocphan.getText() + LHP.getTen());
        sotinchi.setText(sotinchi.getText() + MH.getSoTinChi());
        phong.setText(phong.getText()+PH.getTenPhong());
        btntimkiem.addActionListener(this);
        btnquaylai.addActionListener(this);
        btlkq.setModel(new TimGiangVienFrm.GiangVienTableModel());
        TableCellRenderer buttonRenderer = new TimGiangVienFrm.JTableButtonRenderer();
        btlkq.getColumn("Chon").setCellRenderer(buttonRenderer);
        btlkq.addMouseListener(new TimGiangVienFrm.JTableButtonMouseListener(btlkq));
        btlkq.setRowHeight(25);
        this.setLocation(300, 150);  
        btlkq.setRowHeight(20);
        TableColumn col = btlkq.getColumnModel().getColumn(0);
        col.setPreferredWidth(10); 
        col = btlkq.getColumnModel().getColumn(1);
        col.setPreferredWidth(100);  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnquaylai = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtkhoa = new javax.swing.JTextField();
        btntimkiem = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        btlkq = new javax.swing.JTable();
        mamon = new javax.swing.JLabel();
        tenmon = new javax.swing.JLabel();
        lophocphan = new javax.swing.JLabel();
        sotinchi = new javax.swing.JLabel();
        phong = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnquaylai.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnquaylai.setText("Quay Lại");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 102));
        jLabel1.setText("Tìm Giảng Viên");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Khoa");

        btntimkiem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btntimkiem.setText("Tìm Kiếm");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Kết quả tìm kiếm");

        btlkq.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ));
        jScrollPane1.setViewportView(btlkq);

        mamon.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        mamon.setText("Mã Môn: ");

        tenmon.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tenmon.setText("Tên Môn");

        lophocphan.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lophocphan.setText("Lớp Học Phần: ");

        sotinchi.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        sotinchi.setText("Số tín chỉ: ");

        phong.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        phong.setText("Phòng học: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtkhoa, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btntimkiem))
                            .addComponent(jLabel3))
                        .addGap(77, 165, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnquaylai)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(phong)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(mamon)
                                        .addComponent(sotinchi))
                                    .addGap(178, 178, 178)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lophocphan)
                                        .addComponent(tenmon)))))
                        .addGap(0, 24, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(250, 250, 250)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mamon)
                    .addComponent(tenmon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sotinchi)
                    .addComponent(lophocphan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(phong)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtkhoa, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btntimkiem))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnquaylai)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable btlkq;
    private javax.swing.JButton btnquaylai;
    private javax.swing.JButton btntimkiem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lophocphan;
    private javax.swing.JLabel mamon;
    private javax.swing.JLabel phong;
    private javax.swing.JLabel sotinchi;
    private javax.swing.JLabel tenmon;
    private javax.swing.JTextField txtkhoa;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
       JButton btnClicked = (JButton) e.getSource();
        if(btnClicked.equals(btntimkiem)){
            btnSearchClick();
            return;
        }
        
        if (btnClicked.equals(btnquaylai)) {
            parent.setVisible(true);
           this.dispose();
        }
        for (int i = 0; i < listselect.size(); i++) {
            if(btnClicked.equals(listselect.get(i))){
                btnselectClick(i);
                return;
            }
        }
    }

    private void btnSearchClick() {
        if((txtkhoa.getText() == null)||(txtkhoa.getText().length() == 0)){
            JOptionPane.showMessageDialog(this, "Không tìm thấy giảng viên");
            return;
        }
            
        GiangVienDAO GVDAO = new GiangVienDAO();
        listGV = GVDAO.TimGVTheoKhoa(txtkhoa.getText().trim());
        listselect.clear();
      
        for(int i=0; i<listGV.size(); i++){
            JButton btn = new JButton("Chọn");
            btn.addActionListener(this);
            listselect.add(btn);
            
       }
        ((DefaultTableModel)btlkq.getModel()).fireTableDataChanged();
    }

    private void btnselectClick(int i) {
      if(checkgiangvien(listGV.get(i).getGiangVienId(), KH.getKipHocId()) == false){
        JOptionPane.showMessageDialog(this, "giảng viên đã có lịch dạy vào giờ này! Vui lòng chọn giảng viên khác");
        return;  
      }
        this.setVisible(false);
        new LenLichFrm(this, MH, LHP , PH, listGV.get(i), KH,parent).setVisible(true);
        return;
    }

    private boolean checkgiangvien(int id, int idkip) {
      LichGiangDayDAO daogd = new LichGiangDayDAO();
        if(daogd.checkGV(id, idkip) == null){
         return true;
     }
        return false;
       
    }
    
    
    
    
    class GiangVienTableModel extends DefaultTableModel {
        private String[] columnNames = {"STT", "Tên giảng viên", "Học vị", "Ngành", "Khoa", "Chon"};
        private final Class<?>[] columnTypes = new  Class<?>[] {Integer.class, String.class, String.class, String.class, String.class, JButton.class};
 
        @Override public int getColumnCount() {
            return columnNames.length;
        }
 
        @Override public int getRowCount() {
            return listGV.size();
        }
 
        @Override public String getColumnName(int columnIndex) {
            return columnNames[columnIndex];
        }
 
        @Override public Class<?> getColumnClass(int columnIndex) {
            return columnTypes[columnIndex];
        }
 
        @Override public Object getValueAt(final int rowIndex, final int columnIndex) {
                /*Adding components*/
            switch (columnIndex) {
                case 0: 
                    return rowIndex+1;
                case 1: 
                    return listGV.get(rowIndex).getHoTen();
                case 2: 
                    return listGV.get(rowIndex).getHocVi();
                case 3: 
                    return listGV.get(rowIndex).getNganh();
                case 4: 
                    return listGV.get(rowIndex).getKhoa();
                
                case 5:
                    return listselect.get(rowIndex);
                default: return "Error";
            }
        } 
    }
    
    
    class JTableButtonMouseListener extends MouseAdapter {
        private final JTable table;
 
        public JTableButtonMouseListener(JTable table) {
            this.table = table;
        }
 
        public void mouseClicked(MouseEvent e) {
            int column = table.getColumnModel().getColumnIndexAtX(e.getX()); // get the coloum of the button
            int row    = e.getY()/table.getRowHeight(); //get the row of the button
 
                    //*Checking the row or column is valid or not
            if (row < table.getRowCount() && row >= 0  && column < table.getColumnCount() && column >= 0)  {
                Object value = table.getValueAt(row, column);
                if (value instanceof JButton) {
                    //perform a click event
                    ((JButton)value).doClick();
                }
            }
        }
    }
 
    class JTableButtonRenderer implements TableCellRenderer {        
        @Override public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, 
                boolean hasFocus, int row, int column) {
            JButton button = (JButton)value;
            return button;  
        }
    }
    
    
}
