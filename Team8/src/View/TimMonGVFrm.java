/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Control.MonHocDAO;

import Model.MonHoc;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author LeHoa
 */
public class TimMonGVFrm extends javax.swing.JFrame implements ActionListener {

   private ArrayList<MonHoc> listMH;
    private ArrayList<JButton> listselect; 
    private QuanLiLichFrm parent; 
    
   

    public TimMonGVFrm(QuanLiLichFrm parent) {
        this.parent = parent;
        listMH = new ArrayList<MonHoc>();
        listselect = new ArrayList<JButton>();
        initComponents();
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        btnTimkiem.addActionListener(this);
        btnquaylai.addActionListener(this);
        tbnBang.setModel(new TimMonGVFrm.MonHocTableModel());
        TableCellRenderer buttonRenderer = new JTableButtonRenderer();
        tbnBang.getColumn("Chọn").setCellRenderer(buttonRenderer);
        tbnBang.addMouseListener(new JTableButtonMouseListener(tbnBang));
        tbnBang.setRowHeight(25);
        this.setLocation(300, 150);  
        tbnBang.setRowHeight(20);
        TableColumn col = tbnBang.getColumnModel().getColumn(2);
        col.setPreferredWidth(120);  
        col = tbnBang.getColumnModel().getColumn(3);
        col.setPreferredWidth(5);     
        col = tbnBang.getColumnModel().getColumn(4);
        col.setPreferredWidth(5);  
        col = tbnBang.getColumnModel().getColumn(5);
        col.setPreferredWidth(5);   
        col = tbnBang.getColumnModel().getColumn(6);
        col.setPreferredWidth(5);     
        col = tbnBang.getColumnModel().getColumn(7);
        col.setPreferredWidth(8);     
        col = tbnBang.getColumnModel().getColumn(8);
        col.setPreferredWidth(8);     
        col = tbnBang.getColumnModel().getColumn(9);
        col.setPreferredWidth(8);     
        col = tbnBang.getColumnModel().getColumn(1);
        col.setPreferredWidth(7);     
        col = tbnBang.getColumnModel().getColumn(0);
        col.setPreferredWidth(5);        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtxmonhoc = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnTimkiem = new javax.swing.JButton();
        btnquaylai = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbnBang = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 102));
        jLabel1.setText("Tìm Môn Học");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Nhập tên môn học cần lên lịch");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Kết Quả Tìm Kiếm");

        btnTimkiem.setText("Tìm Kiếm");
        btnTimkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimkiemActionPerformed(evt);
            }
        });

        btnquaylai.setText("Quay Lại");

        tbnBang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", "", "", "", "", "", "", "", ""
            }
        ));
        jScrollPane1.setViewportView(tbnBang);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnquaylai)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtxmonhoc, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnTimkiem))))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 827, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(322, 322, 322)
                        .addComponent(jLabel1)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtxmonhoc, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimkiem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnquaylai)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTimkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimkiemActionPerformed

    }//GEN-LAST:event_btnTimkiemActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTimkiem;
    private javax.swing.JButton btnquaylai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbnBang;
    private javax.swing.JTextField txtxmonhoc;
    // End of variables declaration//GEN-END:variables

    

    @Override
    public void actionPerformed(ActionEvent e) {
        JButton btnClicked = (JButton) e.getSource();
        if(btnClicked.equals(btnTimkiem)){
            btnSearchClick();
            return;
        }
        
        if (btnClicked.equals(btnquaylai)) {
            parent.setVisible(true);
            this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
            return;
        }
        for (int i = 0; i < listselect.size(); i++) {
            if(btnClicked.equals(listselect.get(i))){
                btnselectClick(i);
                return;
            }
        }
    }

    private void btnselectClick(int i) {
        this.setVisible(false);
        new DanhSachCacLHPFrm(listMH.get(i), this ).setVisible(true);
        this.dispose();
        
    }

    private void btnSearchClick() {
        if(txtxmonhoc.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Chưa nhập tên môn học!!!");
            return;
        } 
        MonHocDAO MHDAO = new MonHocDAO();
        listMH = MHDAO.GVTimMonTheoTen(txtxmonhoc.getText().trim());
        
        if(listMH.size()==0){
            JOptionPane.showMessageDialog(this, "Không tìm thấy môn học nào!!!");
            return;
        }   
        listselect.clear();
      
        for(int i=0; i<listMH.size(); i++){
            JButton btn = new JButton("Chọn");
            btn.addActionListener(this);
            listselect.add(btn);
            
           
 
        }
        ((DefaultTableModel)tbnBang.getModel()).fireTableDataChanged();
    }
    
    class MonHocTableModel extends DefaultTableModel {
        private String[] columnNames = {"STT","Mã Môn", "Tên Môn", "STC", "LT", "TH", "BT", "Bộ môn", "Khoa", "Môn Điều kiện", "Chọn"};
        private final Class<?>[] columnTypes = new  Class<?>[] {Integer.class,String.class, String.class, Integer.class,  Integer.class, Integer.class, Integer.class,  
                String.class, String.class, String.class, JButton.class};
 
        @Override public int getColumnCount() {
            return columnNames.length;
        }
 
        @Override public int getRowCount() {
            return listMH.size();
        }
 
        @Override public String getColumnName(int columnIndex) {
            return columnNames[columnIndex];
        }
 
        @Override public Class<?> getColumnClass(int columnIndex) {
            return columnTypes[columnIndex];
        }
 
        @Override public Object getValueAt(final int rowIndex, final int columnIndex) {
                /*Adding components*/
            switch (columnIndex) {
                case 0:
                    return rowIndex+1;
                case 1: 
                    return listMH.get(rowIndex).getMaMon();
                case 2: 
                    return listMH.get(rowIndex).getTenMon();
                case 3: 
                    return listMH.get(rowIndex).getSoTinChi();
                case 4: 
                    return listMH.get(rowIndex).getSoTietLT();
                case 5: 
                    return listMH.get(rowIndex).getSoTietTH();
                case 6: 
                    return listMH.get(rowIndex).getSoTietBT();
                case 7: 
                    return listMH.get(rowIndex).getBoMon();
                case 8:
                    return listMH.get(rowIndex).getKhoa();      
                case 9: 
                    return listMH.get(rowIndex).getMonDK();
                case 10:
                    return listselect.get(rowIndex);
                default: return "Error";
            }
        } 
    }
    
    class JTableButtonMouseListener extends MouseAdapter {
        private final JTable table;
 
        public JTableButtonMouseListener(JTable table) {
            this.table = table;
        }
 
        public void mouseClicked(MouseEvent e) {
            int column = table.getColumnModel().getColumnIndexAtX(e.getX()); // get the coloum of the button
            int row    = e.getY()/table.getRowHeight(); //get the row of the button
 
                    //*Checking the row or column is valid or not
            if (row < table.getRowCount() && row >= 0  && column < table.getColumnCount() && column >= 0)  {
                Object value = table.getValueAt(row, column);
                if (value instanceof JButton) {
                    //perform a click event
                    ((JButton)value).doClick();
                }
            }
        }
    }
 
    class JTableButtonRenderer implements TableCellRenderer {        
        @Override public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, 
                boolean hasFocus, int row, int column) {
            JButton button = (JButton)value;
            return button;  
        }
    }

}
