/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Control.LopHocPhanDAO;
import Control.LopHocPhanDAO;
import Model.LopHocPhan;
import Model.MonHoc;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author LeHoa
 */
public class DanhSachCacLHPFrm extends javax.swing.JFrame implements ActionListener {

    private TimMonGVFrm parent;
    private ArrayList<LopHocPhan> ListLHP;
    private ArrayList<JButton> Listselect;
    private MonHoc MH;
    
    public DanhSachCacLHPFrm(MonHoc MH, TimMonGVFrm parent) {
        initComponents();
       this.parent = parent;
        this.MH = MH;
        ListLHP = new ArrayList<LopHocPhan>();
        Listselect = new ArrayList<JButton>();
        
        LopHocPhanDAO lhp = new LopHocPhanDAO(); 
        mamon.setText(mamon.getText()+MH.getMaMon());
        tenmon.setText(tenmon.getText()+MH.getTenMon());
        sotinchi.setText(sotinchi.getText()+MH.getSoTinChi());
        btnquaylai.addActionListener(this);
        bang.setModel(new LHPTableModel());
        TableCellRenderer buttonRenderer = new DanhSachCacLHPFrm.JTableButtonRenderer();
        bang.getColumn("Chọn").setCellRenderer(buttonRenderer);
        bang.addMouseListener(new DanhSachCacLHPFrm.JTableButtonMouseListener(bang));
        bang.setRowHeight(25);
        fillTable();
        this.setLocation(300, 150);  
        bang.setRowHeight(20);
        TableColumn col = bang.getColumnModel().getColumn(0);
        col.setPreferredWidth(5);  
        col = bang.getColumnModel().getColumn(1);
        col.setPreferredWidth(10);     
        col = bang.getColumnModel().getColumn(2);
        col.setPreferredWidth(120);  
        col = bang.getColumnModel().getColumn(3);
        col.setPreferredWidth(6);   
        col = bang.getColumnModel().getColumn(4);
        col.setPreferredWidth(10);    
        col = bang.getColumnModel().getColumn(5);
        col.setPreferredWidth(10); 

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        mamon = new javax.swing.JLabel();
        tenmon = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        sotinchi = new javax.swing.JLabel();
        btnquaylai = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        bang = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 102));
        jLabel1.setText("Danh Sách Các Lớp Học Phần ");

        mamon.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        mamon.setText("Mã Môn Học :");

        tenmon.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tenmon.setText("Tên Môn Học :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Danh sách các lớp học phần");

        sotinchi.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        sotinchi.setText("Số tín chỉ: ");

        btnquaylai.setText("Quay Lại");

        bang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ));
        jScrollPane2.setViewportView(bang);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(mamon)
                    .addComponent(tenmon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sotinchi)
                .addGap(117, 117, 117))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(240, 240, 240))
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnquaylai)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 654, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mamon)
                    .addComponent(sotinchi))
                .addGap(12, 12, 12)
                .addComponent(tenmon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnquaylai)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bang;
    private javax.swing.JButton btnquaylai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel mamon;
    private javax.swing.JLabel sotinchi;
    private javax.swing.JLabel tenmon;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        
        JButton btnClicked = (JButton) e.getSource();
        
        
        if (btnClicked.equals(btnquaylai)) {
            parent.setVisible(true); 
//            this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING)); 
            this.dispose();
        }
        
//        for(int i=0; i<ListLHP.size(); i++){
//            JButton btn = new JButton("Chọn");
//            btn.addActionListener(this);
//            Listselect.add(btn);
//        }
//        ((DefaultTableModel)bang.getModel()).fireTableDataChanged();
        
        for (int i = 0; i < Listselect.size(); i++) {
            if(btnClicked.equals(Listselect.get(i))){
                btnselectClick(i);
                return;
            }
        }
        
        
        
    }

    private void btnselectClick(int i) {
        this.setVisible(false);
        new TimPhongFrm(this,MH, ListLHP.get(i)).setVisible(true);
        return;
    }

    private void fillTable() {
        LopHocPhanDAO lhp =  new LopHocPhanDAO();
        this.ListLHP = lhp.TimLopTheoMon(MH); 
        if(ListLHP.size()==0){
            JOptionPane.showMessageDialog(this, "Môn học này chưa có lớp học phần. Vui lòng quay lại chọn môn khác để thao tác.");
        }
        for(int i=0; i<ListLHP.size(); i++){
            JButton btn = new JButton("Chọn");
            btn.addActionListener(this);
            Listselect.add(btn);
        }
         
        ((DefaultTableModel)bang.getModel()).fireTableDataChanged();
        
    }
    
    
    class LHPTableModel extends DefaultTableModel {
        private String[] columnNames = {"STT", "Mã Lớp", "Tên Lớp", "Sĩ Số", "Học Kỳ", "Chọn"};
        private final Class<?>[] columnTypes = new  Class<?>[] {Integer.class, String.class, String.class, Integer.class,  String.class, JButton.class};
 
        @Override public int getColumnCount() {
            return 6;
        }
 
        @Override public int getRowCount() {
            return ListLHP.size();
        }
 
        @Override public String getColumnName(int columnIndex) {
            return columnNames[columnIndex];
        }
 
        @Override public Class<?> getColumnClass(int columnIndex) {
            return columnTypes[columnIndex];
        }
 
        @Override public Object getValueAt(final int rowIndex, final int columnIndex) {
                /*Adding components*/
            switch (columnIndex) {
                case 0: 
                    return rowIndex+1;
                case 1: 
                    return ListLHP.get(rowIndex).getMaLop();
                case 2: 
                    return ListLHP.get(rowIndex).getTen();
                case 3: 
                    return ListLHP.get(rowIndex).getSiSo();
                case 4: 
                    return ListLHP.get(rowIndex).getHocKy();
                case 5:
                    return Listselect.get(rowIndex);
                default: return "Error";
            }
        } 
    }
    
    class JTableButtonMouseListener extends MouseAdapter {
        private final JTable table;
 
        public JTableButtonMouseListener(JTable table) {
            this.table = table;
        }
 
        public void mouseClicked(MouseEvent e) {
            int column = table.getColumnModel().getColumnIndexAtX(e.getX()); // get the coloum of the button
            int row    = e.getY()/table.getRowHeight(); //get the row of the button
 
                    //*Checking the row or column is valid or not
            if (row < table.getRowCount() && row >= 0  && column < table.getColumnCount() && column >= 0)  {
                Object value = table.getValueAt(row, column);
                if (value instanceof JButton) {
                    //perform a click event
                    ((JButton)value).doClick();
                }
            }
        }
    }
 
    class JTableButtonRenderer implements TableCellRenderer {        
        @Override public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, 
                boolean hasFocus, int row, int column) {
            JButton button = (JButton)value;
            return button;  
        }
    }
    
    
}
